// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ws_conn.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DispatchMessage struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Recipient            *User    `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Sender               *User    `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	CreatedAt            int64    `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchMessage) Reset()         { *m = DispatchMessage{} }
func (m *DispatchMessage) String() string { return proto.CompactTextString(m) }
func (*DispatchMessage) ProtoMessage()    {}
func (*DispatchMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a9acacddce0399c, []int{0}
}

func (m *DispatchMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchMessage.Unmarshal(m, b)
}
func (m *DispatchMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchMessage.Marshal(b, m, deterministic)
}
func (m *DispatchMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchMessage.Merge(m, src)
}
func (m *DispatchMessage) XXX_Size() int {
	return xxx_messageInfo_DispatchMessage.Size(m)
}
func (m *DispatchMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchMessage proto.InternalMessageInfo

func (m *DispatchMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *DispatchMessage) GetRecipient() *User {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *DispatchMessage) GetSender() *User {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *DispatchMessage) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *DispatchMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DispatchReq struct {
	Sender               *User            `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Accepter             *User            `protobuf:"bytes,2,opt,name=accepter,proto3" json:"accepter,omitempty"`
	Room                 *Room            `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
	Message              *DispatchMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DispatchReq) Reset()         { *m = DispatchReq{} }
func (m *DispatchReq) String() string { return proto.CompactTextString(m) }
func (*DispatchReq) ProtoMessage()    {}
func (*DispatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a9acacddce0399c, []int{1}
}

func (m *DispatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchReq.Unmarshal(m, b)
}
func (m *DispatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchReq.Marshal(b, m, deterministic)
}
func (m *DispatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchReq.Merge(m, src)
}
func (m *DispatchReq) XXX_Size() int {
	return xxx_messageInfo_DispatchReq.Size(m)
}
func (m *DispatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchReq proto.InternalMessageInfo

func (m *DispatchReq) GetSender() *User {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *DispatchReq) GetAccepter() *User {
	if m != nil {
		return m.Accepter
	}
	return nil
}

func (m *DispatchReq) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *DispatchReq) GetMessage() *DispatchMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type DispatchResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchResp) Reset()         { *m = DispatchResp{} }
func (m *DispatchResp) String() string { return proto.CompactTextString(m) }
func (*DispatchResp) ProtoMessage()    {}
func (*DispatchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a9acacddce0399c, []int{2}
}

func (m *DispatchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchResp.Unmarshal(m, b)
}
func (m *DispatchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchResp.Marshal(b, m, deterministic)
}
func (m *DispatchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchResp.Merge(m, src)
}
func (m *DispatchResp) XXX_Size() int {
	return xxx_messageInfo_DispatchResp.Size(m)
}
func (m *DispatchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchResp.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DispatchMessage)(nil), "pb.DispatchMessage")
	proto.RegisterType((*DispatchReq)(nil), "pb.DispatchReq")
	proto.RegisterType((*DispatchResp)(nil), "pb.DispatchResp")
}

func init() { proto.RegisterFile("ws_conn.proto", fileDescriptor_5a9acacddce0399c) }

var fileDescriptor_5a9acacddce0399c = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xf4, 0x30,
	0x10, 0x86, 0xc9, 0xee, 0x7e, 0xfd, 0xda, 0xa9, 0xba, 0x12, 0x41, 0xca, 0xa2, 0x50, 0x8a, 0x48,
	0x2f, 0xdb, 0x43, 0x3d, 0x78, 0x16, 0xbd, 0x7a, 0x09, 0x88, 0xc7, 0x25, 0x4d, 0x87, 0xb5, 0x60,
	0x93, 0x6c, 0x26, 0x22, 0xfe, 0x1d, 0x0f, 0xfe, 0x4e, 0xb1, 0xdb, 0xba, 0x75, 0xc5, 0x5b, 0xf2,
	0xcc, 0x4b, 0xde, 0x87, 0x09, 0x1c, 0xbe, 0xd2, 0x4a, 0x19, 0xad, 0x0b, 0xeb, 0x8c, 0x37, 0x7c,
	0x62, 0xab, 0x45, 0xfc, 0x6c, 0xd6, 0x8d, 0xda, 0x82, 0xec, 0x83, 0xc1, 0xfc, 0xae, 0x21, 0x2b,
	0xbd, 0x7a, 0xba, 0x47, 0x22, 0xb9, 0x46, 0xce, 0x61, 0x56, 0x99, 0xfa, 0x2d, 0x61, 0x29, 0xcb,
	0x23, 0xd1, 0x9d, 0xf9, 0x25, 0x44, 0x0e, 0x55, 0x63, 0x1b, 0xd4, 0x3e, 0x99, 0xa4, 0x2c, 0x8f,
	0xcb, 0xb0, 0xb0, 0x55, 0xf1, 0x40, 0xe8, 0xc4, 0x6e, 0xc4, 0x53, 0x08, 0x08, 0x75, 0x8d, 0x2e,
	0x99, 0xee, 0x85, 0x7a, 0xce, 0xcf, 0x01, 0x94, 0x43, 0xe9, 0xb1, 0x5e, 0x49, 0x9f, 0xcc, 0x52,
	0x96, 0x4f, 0x45, 0xd4, 0x93, 0x1b, 0xcf, 0x4f, 0x21, 0x20, 0x2f, 0xfd, 0x0b, 0x25, 0xff, 0xba,
	0xfa, 0xfe, 0x96, 0xbd, 0x33, 0x88, 0x07, 0x51, 0x81, 0x9b, 0x51, 0x11, 0xfb, 0xa3, 0xe8, 0x02,
	0x42, 0xa9, 0x14, 0x5a, 0x8f, 0xee, 0x97, 0xf1, 0xf7, 0x84, 0x9f, 0xc1, 0xcc, 0x19, 0xd3, 0x8e,
	0x75, 0x85, 0x31, 0xad, 0xe8, 0x28, 0x5f, 0xc2, 0xff, 0x76, 0xbb, 0x95, 0xce, 0x34, 0x2e, 0x4f,
	0xbe, 0x02, 0x7b, 0x0b, 0x13, 0x43, 0x26, 0x3b, 0x82, 0x83, 0x9d, 0x23, 0xd9, 0xf2, 0x1a, 0x82,
	0x47, 0xba, 0x35, 0x5a, 0xf3, 0x25, 0x84, 0xc3, 0x84, 0xcf, 0xc7, 0x6f, 0x08, 0xdc, 0x2c, 0x8e,
	0x7f, 0x02, 0xb2, 0x55, 0xd0, 0xfd, 0xce, 0xd5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x9a,
	0x09, 0x7d, 0xbf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WsConnClient is the client API for WsConn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WsConnClient interface {
	// 消息转发
	Dispatch(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*DispatchResp, error)
}

type wsConnClient struct {
	cc *grpc.ClientConn
}

func NewWsConnClient(cc *grpc.ClientConn) WsConnClient {
	return &wsConnClient{cc}
}

func (c *wsConnClient) Dispatch(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*DispatchResp, error) {
	out := new(DispatchResp)
	err := c.cc.Invoke(ctx, "/pb.WsConn/Dispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WsConnServer is the server API for WsConn service.
type WsConnServer interface {
	// 消息转发
	Dispatch(context.Context, *DispatchReq) (*DispatchResp, error)
}

// UnimplementedWsConnServer can be embedded to have forward compatible implementations.
type UnimplementedWsConnServer struct {
}

func (*UnimplementedWsConnServer) Dispatch(ctx context.Context, req *DispatchReq) (*DispatchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dispatch not implemented")
}

func RegisterWsConnServer(s *grpc.Server, srv WsConnServer) {
	s.RegisterService(&_WsConn_serviceDesc, srv)
}

func _WsConn_Dispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WsConnServer).Dispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WsConn/Dispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WsConnServer).Dispatch(ctx, req.(*DispatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WsConn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.WsConn",
	HandlerType: (*WsConnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dispatch",
			Handler:    _WsConn_Dispatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ws_conn.proto",
}
