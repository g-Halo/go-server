// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushMessageReq struct {
	MessageId            string   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ReceiverUsername     string   `protobuf:"bytes,2,opt,name=receiver_username,json=receiverUsername,proto3" json:"receiver_username,omitempty"`
	SenderUsername       string   `protobuf:"bytes,3,opt,name=sender_username,json=senderUsername,proto3" json:"sender_username,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMessageReq) Reset()         { *m = PushMessageReq{} }
func (m *PushMessageReq) String() string { return proto.CompactTextString(m) }
func (*PushMessageReq) ProtoMessage()    {}
func (*PushMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{0}
}

func (m *PushMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMessageReq.Unmarshal(m, b)
}
func (m *PushMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMessageReq.Marshal(b, m, deterministic)
}
func (m *PushMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMessageReq.Merge(m, src)
}
func (m *PushMessageReq) XXX_Size() int {
	return xxx_messageInfo_PushMessageReq.Size(m)
}
func (m *PushMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushMessageReq proto.InternalMessageInfo

func (m *PushMessageReq) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *PushMessageReq) GetReceiverUsername() string {
	if m != nil {
		return m.ReceiverUsername
	}
	return ""
}

func (m *PushMessageReq) GetSenderUsername() string {
	if m != nil {
		return m.SenderUsername
	}
	return ""
}

func (m *PushMessageReq) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type PushMessageResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMessageResp) Reset()         { *m = PushMessageResp{} }
func (m *PushMessageResp) String() string { return proto.CompactTextString(m) }
func (*PushMessageResp) ProtoMessage()    {}
func (*PushMessageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{1}
}

func (m *PushMessageResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMessageResp.Unmarshal(m, b)
}
func (m *PushMessageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMessageResp.Marshal(b, m, deterministic)
}
func (m *PushMessageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMessageResp.Merge(m, src)
}
func (m *PushMessageResp) XXX_Size() int {
	return xxx_messageInfo_PushMessageResp.Size(m)
}
func (m *PushMessageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMessageResp.DiscardUnknown(m)
}

var xxx_messageInfo_PushMessageResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PushMessageReq)(nil), "pb.PushMessageReq")
	proto.RegisterType((*PushMessageResp)(nil), "pb.PushMessageResp")
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_60207fea82c31ca8) }

var fileDescriptor_60207fea82c31ca8 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x9a, 0xc9, 0xc8, 0xc5,
	0x17, 0x50, 0x5a, 0x9c, 0xe1, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x1a, 0x94, 0x5a, 0x28, 0x24,
	0xcb, 0xc5, 0x95, 0x0b, 0xe1, 0xc5, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71,
	0x42, 0x45, 0x3c, 0x53, 0x84, 0xb4, 0xb9, 0x04, 0x8b, 0x52, 0x93, 0x53, 0x33, 0xcb, 0x52, 0x8b,
	0xe2, 0x4b, 0x8b, 0x53, 0x8b, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x98, 0xc0, 0xaa, 0x04, 0x60, 0x12,
	0xa1, 0x50, 0x71, 0x21, 0x75, 0x2e, 0xfe, 0xe2, 0xd4, 0xbc, 0x14, 0x64, 0xa5, 0xcc, 0x60, 0xa5,
	0x7c, 0x10, 0x61, 0xb8, 0x42, 0x21, 0x2e, 0x96, 0xa4, 0xfc, 0x94, 0x4a, 0x09, 0x16, 0xb0, 0x2c,
	0x98, 0xad, 0x24, 0xc8, 0xc5, 0x8f, 0xe2, 0xb4, 0xe2, 0x02, 0x23, 0x7b, 0x2e, 0x56, 0x1f, 0x90,
	0x0f, 0x84, 0xcc, 0xb8, 0xb8, 0x91, 0xe4, 0x84, 0x84, 0xf4, 0x0a, 0x92, 0xf4, 0x50, 0xfd, 0x21,
	0x25, 0x8c, 0x21, 0x56, 0x5c, 0x90, 0xc4, 0x06, 0xf6, 0xba, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x72, 0x28, 0x37, 0xbf, 0x09, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	PushMessage(ctx context.Context, in *PushMessageReq, opts ...grpc.CallOption) (*PushMessageResp, error)
}

type logicClient struct {
	cc *grpc.ClientConn
}

func NewLogicClient(cc *grpc.ClientConn) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) PushMessage(ctx context.Context, in *PushMessageReq, opts ...grpc.CallOption) (*PushMessageResp, error) {
	out := new(PushMessageResp)
	err := c.cc.Invoke(ctx, "/pb.Logic/PushMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	PushMessage(context.Context, *PushMessageReq) (*PushMessageResp, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) PushMessage(ctx context.Context, req *PushMessageReq) (*PushMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushMessage not implemented")
}

func RegisterLogicServer(s *grpc.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_PushMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).PushMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logic/PushMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).PushMessage(ctx, req.(*PushMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushMessage",
			Handler:    _Logic_PushMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}
